THE MATHEMATICAL CRYPTOGRAPHY OF THE RSA CRYPTOSYSTEM
AUTHOR: Abderrahmane Nitaj
        Laboratoire de Math´ematiques Nicolas Oresme
        Universit´e de Caen, France
        
INTRODUCTION:
  Underlying security is multiplying two large prime numbers is easy but factorising the result is very hard
  
TERMS:  
  p and q are two prime numbers of equal bits
  N = pq (Public Modulus)
  m = plaintext c = cyphertext
  e = public exponent d = private exponent
  Fi(N) = (p -1)(q -1) (Euler Totient F'n)
  c = m^e (mod N)
  e*d = 1 (mod Fi(N))
  (N,e) Public key, (N,d) Private key
  
MATH DEFINATIONS USED:
  i.) Divison Algorithim: For two numbers a and b -- a = b*q + r
                          if r = 0 then b divides a b|a
  ii.) GCD: d is gcd of a and b if
       d|a and d|b
       if c|a and c|b then c|d
  iii.) Prime integer: An integer p is said to be prime if it has only two divisors 1 and p
  iv.) Relatively prime: a and b are coprime if GCD(a,b) = 1
  v.) RSA Modulus: p * q
  
EULER TOTIENT FUNCTION:
  i.) Fi(p) = p - 1 wher p is a prime number
  ii.) Fi(mn) = Fi(m) * Fi(n) where m and n are co-prime
  iii.) Fi(p^e) = p^e-1 * (p -1) where p is a prime number and e >= 1
  iv.) a^Fi(n) = 1*(mod n) where a is an int such that gcd(a,n) = 1
  
RSA CRYPTOSYSTEM:
  1.) Key Generations:
       I/P -- Integer k for number of bits
       O/P -- (N,e) and (N.d)
       
       i.) Pick random primes p and q of bit size k
       ii.) N = p*q, Fi(n) = (p-1)*(q-1)
       iii.) while( gcd(e,Fi(N) != 1)
                Pick a random int e < Fi(N)
       iv.) d = e^-1 (Mod Fi(N))
       v.) Return (N,e) and (N,d)
  
  2.) Encryption:
       i.) Represent message as an int m < N such that gcd(m,N) = 1
       ii.) c = m^e(mod N)
       iii.) Return c
       
  3.) Decryption:
       i.) m = c^e(mod N)
       ii.) return m
       
  4.) Signature:
       I/P -- (Na,ea) and (Nb,db) and m  
       O/P -- c and S
       
       i.) c = m^ea (mod Na)
       ii.) S = c^db (mod Nb)
       iii.) Return c and S
      
  5.) Signature Verifiction:
       I/P -- (Na,da) and (Nb,eb) and c and S
       
       i.) S' = S^eb (mod Nb)
       ii.) Verified if S' = c
        
        
  
